heat_template_version: 2015-04-30

description: |
  #### Multiple Servers

  Try to update Redis to version 3.0.7. This should be built from the source.
  Also updated operating system allowed to Ubuntu version to 14.04 LTS and Centos 6.

  Multiple Linux servers running [redis 3.0.7](http://redis.io/)
  clustered with a [sentinel](http://redis.io/topics/sentinel)
  instance on each node.

parameter_groups:

- label: Server Settings
  parameters:
  - image
  - flavor
  - slave_node_count

- label: Redis Settings
  parameters:
  - redis_port
  - sentinel_port

- label: rax-dev-params
  parameters:
  - redis_master_hostname
  - redis_slave_hostname
  - redis_version
  - kitchen

parameters:

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 512MB Standard Instance
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Centos 6 (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      - Centos 6 (PVHVM)
      description: Must be a supported operating system.

  redis_version:
    label: Redis Version
    description: Version of Redis to install
    type: string
    default: 3.0.7

  redis_master_hostname:
    label: Master Redis Hostname
    description: Hostname for nominal Redis master
    type: string
    default: redis-master-test

  redis_slave_hostname:
    label: Slave Redis Hostname
    description: Hostname for the slaves
    type: string
    default: redis-slave-test

  slave_node_count:
    label: Number Of Slave Nodes
    description: Number of slave nodes to create
    type: number
    default: 0
    constraints:
    - range:
        min: 0
        max: 3
      description: Must be between 1 and 3 servers.

  redis_port:
    label: Redis Port
    description: |
      Required: Port for Redis servers to listen on, it must be different than
      your sentinel port.
    type: number
    default: 6379
    constraints:
    - range:
        min: 1024
        max: 65535
      description: Must be between 1024 and 65535.

  sentinel_port:
    label: Sentinels Port
    description: |
      Required: Port for sentinels to listen on, it must be different than your
      Redis port.
    type: number
    default: 26379
    constraints:
    - range:
        min: 1024
        max: 65535
      description: Must be between 1024 and 65535.

  kitchen:
    label: Kitchen
    description: URL for the kitchen to use
    type: string
    default: https://github.com/radeasy/redis-sentinel
    #default: https://github.com/rackspace-orchestration-templates/redis-sentinel

#  chef_version:
#    label: Chef Version
#    description: Version of chef client to use
#    type: string
#    default: 11.12.8

  child_template:
    label: Child Template
    description: |
      URL to the Child template that will provision Redis slave nodes.
    type: string
    default: https://raw.githubusercontent.com/radeasy/redis-sentinel/master/redis_slave.yaml
    #default: https://raw.githubusercontent.com/rackspace-orchestration-templates/redis-sentinel/master/redis_slave.yaml

resources:

  ssh_key:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  redis_password:
    type: OS::Heat::RandomString
    properties:
      length: 16
      sequence: lettersdigits

  redis_master:
    type: OS::Nova::Server
    depends_on: ssh_key
    properties:
      name: { get_param: redis_master_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  redis_master_config:
    type: OS::Heat::SoftwareConfig
    depends_on: redis_master
    properties:
      group: ansible
      config: |
        #!/bin/bash
        git clone https://github.com/rackerlabs/rs-heat-docs.git
        cp -r redis-sentinel/roles /etc/ansible/roles
        # needed dependency by one of the Ansible modules
        yum install -y libselinux-python python-pycurl facter

#      username: root
#      private_key: { get_attr: [ssh_key, private_key] }
#      host: { get_attr: [redis_master, accessIPv4] }
#      kitchen: { get_param: kitchen }
#      chef_version: { get_param: chef_version }
#      node:
#        run_list: [ "recipe[apt]",
#                    "recipe[build-essential]",
#                    "recipe[rax-redis::config_slave_sentinel]" ]
#        redisio:
#          default_settings:
#            requirepass: { get_attr: [redis_password, value] }
#          servers:
#            - name: master
#              port: { get_param: redis_port }
#          sentinels:
#            - sentinel_port: { get_param: sentinel_port }
#              port:          { get_param: sentinel_port }
#              name: 'cluster'
#              master_ip:     { get_attr: [redis_master, accessIPv4] }
#              master_port:   { get_param: redis_port }
#              auth-pass:     { get_attr: [redis_password, value] }
#              logfile: /var/log/sentinel.log
#          version: { get_param: redis_version }

#  redis_slave_nodes:
#    type: "OS::Heat::ResourceGroup"
#    depends_on: redis_master
#    properties:
#      count: { get_param: slave_node_count }
#      resource_def:
#        type: { get_param: child_template }
#        properties:
#          stack_id:         { get_param: "OS::stack_id" }
#          flavor:           { get_param: flavor }
#          image:            { get_param: image }
#          server_hostname:  { get_param: redis_slave_hostname }
#          ssh_keypair_name: { get_resource: ssh_key }
#          ssh_private_key:  { get_attr: [ssh_key, private_key] }
#          redis_password:   { get_attr: [redis_password, value] }
#          master_ip:        { get_attr: [redis_master, accessIPv4] }
#          redis_port:       { get_param: redis_port }
#          sentinel_port:    { get_param: sentinel_port }
#          redis_version:    { get_param: redis_version }


outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  redis_password:
    description: Redis Password
    value: { get_attr: [redis_password, value] }

  redis_master_ip:
    description: Redis Master IP
    value: { get_attr: [redis_master, accessIPv4]}

  redis_slave_ips:
    description: Redis Slave IPs
    value: { get_attr: [redis_slave_nodes, redis_slave_ip] }

  redis_port:
    description: Redis Port
    value: { get_param: redis_port }

  sentinel_port:
    description: Sentinel Port
    value: { get_param: sentinel_port }
